version: "3.9"

services:
  postgres:
    image: "postgres:14.8-alpine3.18"
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: "inventory"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "123456"
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./postgres-data:/var/lib/postgresql/data:Z
      - ./backups:/backups:Z
    ports:
      - "5432:5432"

  frontend:
    container_name: qr_frontend
    build: ../frontend
    ports:
      - "8080:8080"
    env_file:
      - ../frontend/.env  # Укажите путь к файлу с переменными окружения для фронтенда

  backend:
    container_name: qr_backend
    build: ../backend
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    env_file:
      - ../backend/.env  # Укажите путь к файлу с переменными окружения для бэкенда

  redis:
    image: "redis:latest"
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data

  
  # redis-commander:
  #   container_name: red_commander
  #   restart: always
  #   image: "rediscommander/redis-commander:latest"
  #   ports:
  #     - "8082:8081"
  #   depends_on:
  #     - redis
  #   environment:
  #     - REDIS_HOSTS=local:redis:6379

  # adminer:
  #   image: adminer
  #   container_name: adminer
  #   restart: always
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - postgres

#  pgadmin:
#    image: dpage/pgadmin4
#    container_name: pgadmin
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: mypgadminemail@example.com
#      PGADMIN_DEFAULT_PASSWORD: mypgadminpassword
#    ports:
#      - "5050:80"

volumes:
  data:
  redis:

